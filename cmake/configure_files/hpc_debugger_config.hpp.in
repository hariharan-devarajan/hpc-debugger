#ifndef HPC_DEBUGGER_CONFIG_HPP
#define HPC_DEBUGGER_CONFIG_HPP

/* Version string for HPC_DEBUGGER */
#define HPC_DEBUGGER_PACKAGE_VERSION "@HPC_DEBUGGER_PACKAGE_VERSION@"
#cmakedefine HPC_DEBUGGER_GIT_VERSION @HPC_DEBUGGER_GIT_VERSION@

#define HPC_DEBUGGER_GET_VERSION(MAJOR, MINOR, PATCH) (MAJOR * 100000 + MINOR * 100 + PATCH)
#define HPC_DEBUGGER_VERSION (HPC_DEBUGGER_GET_VERSION @HPC_DEBUGGER_VERSION@)
#define HPC_DEBUGGER_VERSION_MAJOR (HPC_DEBUGGER_VERSION / 100000)
#define HPC_DEBUGGER_VERSION_MINOR ((HPC_DEBUGGER_VERSION / 100) % 1000)
#define HPC_DEBUGGER_VERSION_PATCH (HPC_DEBUGGER_VERSION % 100)


/* Compiler used */
#cmakedefine CMAKE_BUILD_TYPE "@CMAKE_BUILD_TYPE@"

#cmakedefine CMAKE_C_COMPILER "@CMAKE_C_COMPILER@"
#cmakedefine CMAKE_C_FLAGS "@CMAKE_C_FLAGS@"
#cmakedefine CMAKE_C_FLAGS_DEBUG "@CMAKE_C_FLAGS_DEBUG@"
#cmakedefine CMAKE_C_FLAGS_RELWITHDEBINFO "@CMAKE_C_FLAGS_RELWITHDEBINFO@"
#cmakedefine CMAKE_C_FLAGS_RELEASE "@CMAKE_C_FLAGS@_RELEASE"

#cmakedefine CMAKE_CXX_COMPILER "@CMAKE_CXX_COMPILER@"
#cmakedefine CMAKE_CXX_FLAGS "@CMAKE_CXX_FLAGS@"
#cmakedefine CMAKE_CXX_FLAGS_DEBUG "@CMAKE_CXX_FLAGS_DEBUG@"
#cmakedefine CMAKE_CXX_FLAGS_RELWITHDEBINFO "@CMAKE_CXX_FLAGS_RELWITHDEBINFO@"
#cmakedefine CMAKE_CXX_FLAGS_RELEASE "@CMAKE_CXX_FLAGS_RELEASE@"

#cmakedefine CMAKE_C_SHARED_LIBRARY_FLAGS "@CMAKE_C_SHARED_LIBRARY_FLAGS@"
#cmakedefine CMAKE_CXX_SHARED_LIBRARY_FLAGS "@CMAKE_CXX_SHARED_LIBRARY_FLAGS@"

/* Macro flags */
#cmakedefine HPC_DEBUGGER_GNU_LINUX 1
#cmakedefine HPC_DEBUGGER_HAS_STD_FILESYSTEM 1
#cmakedefine HPC_DEBUGGER_HAS_STD_FSTREAM_FD 1
#cmakedefine HPC_DEBUGGER_ENABLE_MPI 1
// Logger
#cmakedefine HPC_DEBUGGER_LOGGER_CPP_LOGGER 1
// Logger level
#cmakedefine HPC_DEBUGGER_LOGGER_NO_LOG 1
#cmakedefine HPC_DEBUGGER_LOGGER_LEVEL_ERROR 1
#cmakedefine HPC_DEBUGGER_LOGGER_LEVEL_WARN 1
#cmakedefine HPC_DEBUGGER_LOGGER_LEVEL_INFO 1
#cmakedefine HPC_DEBUGGER_LOGGER_LEVEL_DEBUG 1
#cmakedefine HPC_DEBUGGER_LOGGER_LEVEL_TRACE 1


//==========================
// Common macro definitions
//==========================

#define HPC_DEBUGGER_PATH_DELIM "/"

// #define HPC_DEBUGGER_NOOP_MACRO do {} while (0)
#define HPC_DEBUGGER_NOOP_MACRO

// Detect VAR_OPT
// https://stackoverflow.com/questions/48045470/portably-detect-va-opt-support
#if __cplusplus <= 201703 && defined __GNUC__ && !defined __clang__ && \
    !defined __EDG__
#define VA_OPT_SUPPORTED false
#else
#define PP_THIRD_ARG(a, b, c, ...) c
#define VA_OPT_SUPPORTED_I(...) PP_THIRD_ARG(__VA_OPT__(, ), true, false, )
#define VA_OPT_SUPPORTED VA_OPT_SUPPORTED_I(?)
#endif

#if !defined(HPC_DEBUGGER_HASH_SEED) || (HPC_DEBUGGER_HASH_SEED <= 0)
#define HPC_DEBUGGER_SEED 104723u
#endif

#endif /* HPC_DEBUGGER_CONFIG_H */